To find the minimum number of cuts needed to divide a circle into \( n \) equal slices, you can use the formula:

\[
\text{Minimum cuts} = \begin{cases} n - 1 & \text{if } n \text{ is odd} \\ n & \text{if } n \text{ is even} \end{cases}
\]

Here's the Python code implementing this logic:

```python
def min_cuts_to_divide_circle(n):
    if n % 2 == 0:
        return n
    else:
        return n - 1

# Example usage:
n1 = 4
print(min_cuts_to_divide_circle(n1))  # Output: 2

n2 = 3
print(min_cuts_to_divide_circle(n2))  # Output: 3
```

This code checks if \( n \) is even or odd. If \( n \) is even, then \( n \) cuts are needed. If \( n \) is odd, then \( n - 1 \) cuts are needed.
