def combinationSum(candidates, target):
    def backtrack(remaining, start, path, result):
        if remaining == 0:
            result.append(list(path))
            return
        elif remaining < 0:
            return
        
        for i in range(start, len(candidates)):
            path.append(candidates[i])
            backtrack(remaining - candidates[i], i, path, result)
            path.pop()
    
    result = []
    candidates.sort()  # Optional: sorting helps with optimization
    backtrack(target, 0, [], result)
    return result

# Example usage
candidates = [2, 3, 6, 7]
target = 7
print(combinationSum(candidates, target))  # Output: [[2, 2, 3], [7]]
